name: Docker Assessment Test

# Wann der Workflow ausgeführt werden soll: Pushes auf den main Branch oder Pull Requests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-assessment:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx (Erweiterung für Docker Build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Logge dich in DockerHub ein (wenn nötig)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # In GitHub-Secrets hinterlegen
          password: ${{ secrets.DOCKER_PASSWORD }}  # In GitHub-Secrets hinterlegen

      # Baue das Docker-Image für den Calculation-Service
      - name: Build calculation-service image
        run: docker build -t calculation-service ./calculation-service

      # Starte die Docker-Container und führe die Tests gegen das Assessment-Image aus
      - name: Run containers with docker-compose
        run: |
          docker-compose up -d
          sleep 10  # Warten, bis die Container laufen

      # Führe Tests aus, um zu prüfen, ob der Service korrekt arbeitet
      - name: Test API response
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/v1/dataset)
          if [ $response -eq 200 ]; then
            echo "Test passed: Dataset API is working."
          else
            echo "Test failed: Dataset API returned $response."
            exit 1
          fi

      # Stoppe die Docker-Container
      - name: Shutdown Docker Compose
        run: docker-compose down
